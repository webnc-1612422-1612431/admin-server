-- MySQL Script generated by MySQL Workbench
-- Sun Dec  1 22:48:04 2019
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema UberForTutor
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema UberForTutor
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `UberForTutor` DEFAULT CHARACTER SET utf8 ;
USE `UberForTutor` ;

-- -----------------------------------------------------
-- Table `UberForTutor`.`user`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`user` (
  `id` INT NOT NULL,
  `email` VARCHAR(45) NULL,
  `password` LONGTEXT NULL,
  `role` VARCHAR(45) NULL,
  `fullname` VARCHAR(45) NULL,
  `avatar` LONGTEXT NULL COMMENT '\n',
  `address` NVARCHAR(45) NULL,
  `major` LONGTEXT NULL,
  `price` INT NULL,
  `introduction` LONGTEXT NULL,
  `facebookid` LONGTEXT NULL,
  `googleid` LONGTEXT NULL,
  `lostpasstoken` LONGTEXT NULL,
  `lostpasstokenexpired` DATETIME NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`skill`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`skill` (
  `id` INT NOT NULL,
  `skill` NVARCHAR(45) NULL,
  `state` TINYINT NULL,
  PRIMARY KEY (`id`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`contract`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`contract` (
  `id` INT NOT NULL,
  `teacherid` INT NULL,
  `studentid` INT NULL,
  `state` VARCHAR(45) NULL,
  `revenue` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `teacherid_idx` (`teacherid` ASC) VISIBLE,
  INDEX `studentid_idx` (`studentid` ASC) VISIBLE,
  CONSTRAINT `teacherid`
    FOREIGN KEY (`teacherid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `studentid`
    FOREIGN KEY (`studentid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`contractdetail`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`contractdetail` (
  `id` INT NOT NULL,
  `contractid` INT NULL,
  `startdate` DATETIME NULL,
  `enddate` DATETIME NULL,
  `rate` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `contractid_idx` (`contractid` ASC) VISIBLE,
  CONSTRAINT `contractid`
    FOREIGN KEY (`contractid`)
    REFERENCES `UberForTutor`.`contract` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`complain`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`complain` (
  `id` INT NOT NULL,
  `contractid` INT NULL,
  `content` LONGTEXT NULL,
  `ishandled` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `contractid_idx` (`contractid` ASC) VISIBLE,
  CONSTRAINT `contractid`
    FOREIGN KEY (`contractid`)
    REFERENCES `UberForTutor`.`contract` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`user_skill`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`user_skill` (
  `id` INT NOT NULL,
  `userid` INT NULL,
  `skillid` INT NULL,
  PRIMARY KEY (`id`),
  INDEX `userid_idx` (`userid` ASC) VISIBLE,
  INDEX `skillid_idx` (`skillid` ASC) VISIBLE,
  CONSTRAINT `userid`
    FOREIGN KEY (`userid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `skillid`
    FOREIGN KEY (`skillid`)
    REFERENCES `UberForTutor`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`comment`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`comment` (
  `id` INT NOT NULL,
  `userid` INT NULL,
  `teacherid` INT NULL,
  `content` LONGTEXT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_comment_user_idx` (`userid` ASC) VISIBLE,
  INDEX `FK_comment_user_teacher_idx` (`teacherid` ASC) VISIBLE,
  CONSTRAINT `FK_comment_user_user`
    FOREIGN KEY (`userid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_comment_user_teacher`
    FOREIGN KEY (`teacherid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `UberForTutor`.`request`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `UberForTutor`.`request` (
  `id` INT NOT NULL,
  `studentid` INT NULL,
  `teacherid` INT NULL,
  `skill` INT NULL,
  `isaccept` TINYINT NULL,
  PRIMARY KEY (`id`),
  INDEX `FK_request_skill_idx` (`skill` ASC) VISIBLE,
  INDEX `FK_request_user_teacher_idx` (`teacherid` ASC) VISIBLE,
  INDEX `FK_request_user_student_idx` (`studentid` ASC) VISIBLE,
  CONSTRAINT `FK_request_skill`
    FOREIGN KEY (`skill`)
    REFERENCES `UberForTutor`.`skill` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_request_user_teacher`
    FOREIGN KEY (`teacherid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `FK_request_user_student`
    FOREIGN KEY (`studentid`)
    REFERENCES `UberForTutor`.`user` (`id`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
